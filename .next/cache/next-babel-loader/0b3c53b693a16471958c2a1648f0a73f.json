{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nimport { Redirect } from '@shopify/app-bridge/actions';\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      redirect.dispatch(Redirect.Action.APP, '/index');\n      console.log('REDIRECTED');\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.2;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return /*#__PURE__*/_jsx(Page, {\n      children: /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsxs(Layout.Section, {\n          children: [/*#__PURE__*/_jsx(DisplayText, {\n            size: \"large\",\n            children: name\n          }), /*#__PURE__*/_jsxs(Form, {\n            children: [/*#__PURE__*/_jsx(Card, {\n              sectioned: true,\n              children: /*#__PURE__*/_jsxs(FormLayout, {\n                children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                  children: [/*#__PURE__*/_jsx(TextField, {\n                    prefix: \"$\",\n                    value: price,\n                    disabled: true,\n                    label: \"Original price\",\n                    type: \"price\"\n                  }), /*#__PURE__*/_jsx(TextField, {\n                    prefix: \"$\",\n                    value: discount,\n                    onChange: this.handleChange('discount'),\n                    label: \"Discounted price\",\n                    type: \"discount\"\n                  })]\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  children: \"This sale price will expire in two weeks\"\n                })]\n              })\n            }), /*#__PURE__*/_jsx(PageActions, {\n              primaryAction: [{\n                content: 'Save',\n                onAction: () => {\n                  console.log('submitted');\n                }\n              }],\n              secondaryActions: [{\n                content: 'Remove discount'\n              }]\n            })]\n          })]\n        })\n      })\n    });\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/pages/edit-products.js"],"names":["Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","React","Redirect","EditProduct","Component","discount","price","variantId","field","redirect","dispatch","Action","APP","console","log","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleChange","content","onAction"],"mappings":"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","sourcesContent":["import {\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField\r\n  } from '@shopify/polaris';\r\n  import store from 'store-js';\r\n  import React from 'react';\r\n  import { Redirect } from '@shopify/app-bridge/actions';\r\n\r\n\r\n  \r\n  class EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: ''\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n  \r\n    render() {\r\n      const { name, price, discount, variantId } = this.state;\r\n  \r\n      return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <DisplayText size=\"large\">{name}</DisplayText>\r\n              <Form>\r\n                <Card sectioned>\r\n                  <FormLayout>\r\n                    <FormLayout.Group>\r\n                      <TextField\r\n                        prefix=\"$\"\r\n                        value={price}\r\n                        disabled={true}\r\n                        label=\"Original price\"\r\n                        type=\"price\"\r\n                      />\r\n                      <TextField\r\n                        prefix=\"$\"\r\n                        value={discount}\r\n                        onChange={this.handleChange('discount')}\r\n                        label=\"Discounted price\"\r\n                        type=\"discount\"\r\n                      />\r\n                    </FormLayout.Group>\r\n                    <p>\r\n                      This sale price will expire in two weeks\r\n                    </p>\r\n                  </FormLayout>\r\n                </Card>\r\n                <PageActions\r\n                  primaryAction={[\r\n                    {\r\n                      content: 'Save',\r\n                      onAction: () => {\r\n                        console.log('submitted');\r\n                      }\r\n                    }\r\n                  ]}\r\n                  secondaryActions={[\r\n                    {\r\n                      content: 'Remove discount'\r\n                    }\r\n                  ]}\r\n                />\r\n              </Form>\r\n            </Layout.Section>\r\n          </Layout>\r\n        </Page>\r\n      );\r\n    }\r\n  \r\n    handleChange = (field) => {\r\n        redirect.dispatch(\r\n            Redirect.Action.APP,\r\n            '/index',\r\n          );\r\n          console.log('REDIRECTED')\r\n      return (value) => this.setState({ [field]: value });\r\n      \r\n    };\r\n  \r\n    itemToBeConsumed = () => {\r\n      const item = store.get('item');\r\n      const price = item.variants.edges[0].node.price;\r\n      const variantId = item.variants.edges[0].node.id;\r\n      const discounter = price * 0.2;\r\n      this.setState({ price, variantId });\r\n      return (price - discounter).toFixed(2);\r\n    };\r\n  }\r\n  \r\n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}