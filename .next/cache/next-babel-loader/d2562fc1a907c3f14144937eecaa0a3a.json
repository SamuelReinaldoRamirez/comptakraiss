{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store-js'; //class Select extends PureComponent {\n\nclass Select extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      options: [{\n        name: 'Select…',\n        value: null\n      }, {\n        name: 'A',\n        value: 'a'\n      }, {\n        name: 'B',\n        value: 'b'\n      }, {\n        name: 'C',\n        value: 'c'\n      }],\n      value: '?'\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        value: event.target.value\n      });\n      console.log(this.props.id);\n      console.log(event.target.value);\n      store.set('etat' + this.props.id, {\n        id: this.props.id,\n        choix: event.target.value\n      });\n    });\n  }\n\n  render() {\n    const {\n      options,\n      value\n    } = this.state;\n    var currentId;\n    var etatFromStore;\n    var val;\n    /*return (\r\n      <Fragment>\r\n        <select onChange={this.handleChange} value={value}>\r\n          {options.map(item => (\r\n            console.log(\"option\"),\r\n            console.log(item),\r\n            console.log(value),\r\n            console.log({value}),\r\n            console.log(this),\r\n            <option key={item.value} value={item.value}>\r\n              {item.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <h1>Favorite letter: {value}</h1>\r\n      </Fragment>\r\n    );*/\n\n    return /*#__PURE__*/_jsxs(Fragment, {\n      children: [/*#__PURE__*/_jsx(\"select\", {\n        onChange: this.handleChange,\n        value: value,\n        children: options.map(item => (currentId = this.props.id, etatFromStore = store.get('etat' + currentId), val = value, etatFromStore.id == 1 ? etatFromStore = undefined : '', etatFromStore == undefined ? store.set('etat' + currentId, {\n          id: currentId,\n          choix: val\n        }) : '', console.log('etat' + currentId), console.log(etatFromStore),\n        /* console.log(val),\r\n         console.log(value), */\n        console.log(etatFromStore == undefined), console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id), console.log(etatFromStore == undefined ? 'pas de choix choisi' : etatFromStore.choix),\n        /*#__PURE__*/\n        //console.log(\"option\"),\n        //console.log(item),\n        //console.log({value}),\n\n        /*console.log(this),*/\n        _jsx(\"option\", {\n          value: item.value,\n          children: item.name\n        }, item.value)))\n      }), /*#__PURE__*/_jsxs(\"h1\", {\n        children: [\"Favorite letter: \", value]\n      })]\n    });\n  }\n\n}\n\nexport default Select;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/selectdrop.js"],"names":["React","PureComponent","Fragment","ReactDOM","store","Select","Component","options","name","value","event","setState","target","console","log","props","id","set","choix","render","state","currentId","etatFromStore","val","handleChange","map","item","get","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from 'store-js';\r\n\r\n\r\n//class Select extends PureComponent {\r\nclass Select extends React.Component{\r\n    state = {\r\n      options: [\r\n        {\r\n          name: 'Select…',\r\n          value: null,\r\n        },\r\n        {\r\n          name: 'A',\r\n          value: 'a',\r\n        },\r\n        {\r\n          name: 'B',\r\n          value: 'b',\r\n        },\r\n        {\r\n          name: 'C',\r\n          value: 'c',\r\n        },\r\n      ],\r\n      value: '?',\r\n    };\r\n\r\n    /*\r\n    handleSelection = (resources) => {\r\n      const idsFromResources = resources.selection.map((product) => product.id);\r\n      this.setState({ open: false })\r\n      console.log(resources)\r\n      console.log(idsFromResources)\r\n      console.log(resources.id)\r\n      store.set('ids', idsFromResources);\r\n    };*/\r\n  \r\n    handleChange = (event) => {\r\n      this.setState({ value: event.target.value });\r\n      console.log(this.props.id)\r\n      console.log(event.target.value)\r\n      store.set('etat'+this.props.id, { id : this.props.id, choix : event.target.value})\r\n    };\r\n  \r\n    render() {\r\n      const { options, value } = this.state;\r\n      var currentId;\r\n      var etatFromStore;\r\n      var val;\r\n  \r\n      /*return (\r\n        <Fragment>\r\n          <select onChange={this.handleChange} value={value}>\r\n            {options.map(item => (\r\n              console.log(\"option\"),\r\n              console.log(item),\r\n              console.log(value),\r\n              console.log({value}),\r\n              console.log(this),\r\n              <option key={item.value} value={item.value}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <h1>Favorite letter: {value}</h1>\r\n        </Fragment>\r\n      );*/\r\n      return (\r\n        <Fragment>\r\n          <select onChange={this.handleChange} value={value}>\r\n            {options.map(item => (\r\n              currentId = this.props.id,\r\n              etatFromStore = store.get('etat'+currentId),\r\n              val = value,\r\n              etatFromStore.id == 1 ? etatFromStore = undefined : '',\r\n              etatFromStore == undefined ? store.set('etat'+currentId,{ id : currentId, choix : val}) : '',\r\n              \r\n              console.log('etat'+currentId),\r\n              console.log(etatFromStore),\r\n             /* console.log(val),\r\n              console.log(value), */\r\n\r\n\r\n              console.log(etatFromStore == undefined),\r\n\r\n              console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id),\r\n              console.log(etatFromStore == undefined ? 'pas de choix choisi' : etatFromStore.choix),\r\n              //console.log(\"option\"),\r\n              //console.log(item),\r\n              //console.log({value}),\r\n              /*console.log(this),*/\r\n              <option key={item.value} value={item.value}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <h1>Favorite letter: {value}</h1>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  export default Select;"]},"metadata":{},"sourceType":"module"}