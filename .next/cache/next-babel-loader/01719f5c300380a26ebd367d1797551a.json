{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport React from 'react';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      console.log(resources);\n      console.log(idsFromResources);\n      console.log(resources.id);\n      store.set('ids', idsFromResources);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Page, {\n      children: [/*#__PURE__*/_jsx(TitleBar, {\n        title: \"Sample App\",\n        primaryAction: {\n          content: 'Select products',\n          //comment faire 2 lambdas à la suite pour avoir aussi le console log?\n          onAction: () => this.setState({\n            open: true\n          }) //onAction: () => console.log('clickedd'),\n\n        }\n      }), /*#__PURE__*/_jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: resources => this.handleSelection(resources),\n        onCancel: () => this.setState({\n          open: false\n        })\n      }), /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsx(EmptyState, {\n          heading: \"Discount your products temporarily\",\n          action: {\n            content: 'Select products',\n            onAction: () => this.setState({\n              open: true\n            })\n          },\n          image: img,\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"Select products to change their price temporarily.\"\n          })\n        })\n      })]\n    });\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/pages/index.js"],"names":["EmptyState","Layout","Page","ResourcePicker","TitleBar","React","store","ResourceListWithProducts","img","Index","Component","open","resources","idsFromResources","selection","map","product","id","setState","console","log","set","render","content","onAction","state","handleSelection"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AAEA,MAAMC,GAAG,GAAG,mEAAZ;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAD0B;;AAAA,6CAmCfC,SAAD,IAAe;AAC/B,YAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAA7C,CAAzB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYP,gBAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACK,EAAtB;AACAX,MAAAA,KAAK,CAACe,GAAN,CAAU,KAAV,EAAiBR,gBAAjB;AACD,KA1CiC;AAAA;;AAElCS,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,IAAD;AAAA,8BACE,KAAC,QAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,aAAa,EAAE;AACbC,UAAAA,OAAO,EAAE,iBADI;AAEb;AACAC,UAAAA,QAAQ,EAAE,MAAM,KAAKN,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAAd,CAHH,CAIb;;AAJa;AAFjB,QADF,eAUE,KAAC,cAAD;AACE,QAAA,YAAY,EAAC,SADf;AAEE,QAAA,YAAY,EAAE,KAFhB;AAGE,QAAA,IAAI,EAAE,KAAKc,KAAL,CAAWd,IAHnB;AAIE,QAAA,WAAW,EAAGC,SAAD,IAAe,KAAKc,eAAL,CAAqBd,SAArB,CAJ9B;AAKE,QAAA,QAAQ,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAd;AALlB,QAVF,eAiBE,KAAC,MAAD;AAAA,+BACE,KAAC,UAAD;AACE,UAAA,OAAO,EAAC,oCADV;AAEE,UAAA,MAAM,EAAE;AACNY,YAAAA,OAAO,EAAE,iBADH;AAENC,YAAAA,QAAQ,EAAE,MAAM,KAAKN,QAAL,CAAc;AAAEP,cAAAA,IAAI,EAAE;AAAR,aAAd;AAFV,WAFV;AAKE,UAAA,KAAK,EAAEH,GALT;AAAA,iCAOE;AAAA;AAAA;AAPF;AADF,QAjBF;AAAA,MADF;AA+BD;;AAlCiC;;AA6CpC,eAAeC,KAAf","sourcesContent":["import { EmptyState, Layout, Page } from '@shopify/polaris';\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\r\nimport React from 'react';\r\nimport store from 'store-js';\r\nimport ResourceListWithProducts from '../components/ResourceList';\r\n\r\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\r\n\r\nclass Index extends React.Component {\r\n  state = { open: false };\r\n  render() {\r\n    return (\r\n      <Page>\r\n        <TitleBar\r\n          title=\"Sample App\"\r\n          primaryAction={{\r\n            content: 'Select products',\r\n            //comment faire 2 lambdas à la suite pour avoir aussi le console log?\r\n            onAction: () => this.setState({ open: true }),\r\n            //onAction: () => console.log('clickedd'),\r\n          }}\r\n        />\r\n        <ResourcePicker\r\n          resourceType=\"Product\"\r\n          showVariants={false}\r\n          open={this.state.open}\r\n          onSelection={(resources) => this.handleSelection(resources)}\r\n          onCancel={() => this.setState({ open: false })}\r\n        />\r\n        <Layout>\r\n          <EmptyState\r\n            heading=\"Discount your products temporarily\"\r\n            action={{\r\n              content: 'Select products',\r\n              onAction: () => this.setState({ open: true }),            }}\r\n            image={img}\r\n          >\r\n            <p>Select products to change their price temporarily.</p>\r\n          </EmptyState>\r\n        </Layout>\r\n      </Page>\r\n    );\r\n  }\r\n  handleSelection = (resources) => {\r\n    const idsFromResources = resources.selection.map((product) => product.id);\r\n    this.setState({ open: false })\r\n    console.log(resources)\r\n    console.log(idsFromResources)\r\n    console.log(resources.id)\r\n    store.set('ids', idsFromResources);\r\n  };\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}