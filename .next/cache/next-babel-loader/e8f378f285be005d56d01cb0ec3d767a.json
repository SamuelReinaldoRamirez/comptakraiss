{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, Page, DataTable, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\n\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\n\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\n\nconst GET_ORDERS_BY_ID = gql`\nquery {\n  orders(first: 50) {\n    edges {\n      cursor\n      node {\n        id\n        name\n        email\n        netPaymentSet{\n          shopMoney{\n            amount\n          }\t\n        }\n        lineItems(first:5){\n          edges{\n            node{\n              name\n              image {\n                id\n                    originalSrc\n                    altText\n              }\n               \n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nfunction DataTableExample() {\n  const rows = [['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'], ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'], ['Navy Merino Wool Blaz', '$445.00', 124518, 32, '$14,240.00']];\n  return /*#__PURE__*/_jsx(Page, {\n    title: \"Sales by product\",\n    children: /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(DataTable, {\n        columnContentTypes: ['text', 'numeric', 'numeric', 'numeric', 'numeric'],\n        headings: ['Product', 'Price', 'SKU Number', 'Net quantity', 'Net sales'],\n        rows: rows //totals={['', '', '', 255, '$155,830.00']}\n\n      })\n    })\n  });\n}\n\nclass ResourceListWithOrders extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_ORDERS_BY_ID,\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading\\u2026\"\n        });\n        if (error) return /*#__PURE__*/_jsx(\"div\", {\n          children: error.message\n        });\n        console.log(data);\n        console.log(data.orders.edges[0].node);\n        console.log(data.orders.edges[0].node.lineItems.edges[0].node.image.originalSrc);\n        return DataTableExample();\n      }\n    });\n  }\n\n}\n/*<Card>\r\n  <p>Les 50 derni√®res commandes</p>\r\n  <ResourceList\r\n    showHeader\r\n    resourceName={{ singular: 'Order', plural: 'Orders' }}\r\n    items={data.orders.edges}\r\n    renderItem={item => {\r\n      const orderName = item.node.name\r\n      const media = (\r\n        <Thumbnail\r\n          source={\r\n            item.node.lineItems.edges[0]\r\n              ? item.node.lineItems.edges[0].node.image.originalSrc\r\n              : ''\r\n          }\r\n        />\r\n      );\r\n      const price = item.node.netPaymentSet.shopMoney.amount;\r\n      return (\r\n        \r\n        <ResourceList.Item\r\n        media = {orderName}\r\n         // id={item.id}\r\n          media={media}\r\n          //accessibilityLabel={`View details for ${item.title}`}\r\n          onClick={() => {\r\n            //store.set('item', item);\r\n            console.log('store.set')\r\n            //redirectToProduct();\r\n          }}\r\n        >\r\n          <Stack>\r\n          <Stack.Item>\r\n              <p>{orderName}</p>\r\n            </Stack.Item>\r\n            <Stack.Item fill>\r\n              <h3>\r\n                <TextStyle variation=\"strong\">\r\n                    {item.node.id}\r\n                </TextStyle>\r\n              </h3>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <p>${price}</p>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <p>Expires on R </p>\r\n            </Stack.Item>\r\n          </Stack>\r\n        </ResourceList.Item>\r\n      );\r\n    }}\r\n  />\r\n</Card>\r\n);\r\n}}\r\n</Query>\r\n);\r\n}\r\n}*/\n\n\nexport default ResourceListWithOrders;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/getOrders.js"],"names":["gql","Query","Card","Page","DataTable","ResourceList","Stack","TextStyle","Thumbnail","store","React","Redirect","Context","GET_ORDERS_BY_ID","DataTableExample","rows","ResourceListWithOrders","Component","render","data","loading","error","message","console","log","orders","edges","node","lineItems","image","originalSrc"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card,\r\n  Page,\r\n  DataTable,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport React from 'react';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\r\n\r\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nconst GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nfunction DataTableExample() {\r\n  const rows = [\r\n    ['Emerald Silk Gown', '$875.00', 124689, 140, '$122,500.00'],\r\n    ['Mauve Cashmere Scarf', '$230.00', 124533, 83, '$19,090.00'],\r\n    [\r\n      'Navy Merino Wool Blaz',\r\n      '$445.00',\r\n      124518,\r\n      32,\r\n      '$14,240.00',\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"Sales by product\">\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'text',\r\n            'numeric',\r\n            'numeric',\r\n            'numeric',\r\n            'numeric',\r\n          ]}\r\n          headings={[\r\n            'Product',\r\n            'Price',\r\n            'SKU Number',\r\n            'Net quantity',\r\n            'Net sales',\r\n          ]}\r\n          rows={rows}\r\n          //totals={['', '', '', 255, '$155,830.00']}\r\n        />\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n\r\nclass ResourceListWithOrders extends React.Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_ORDERS_BY_ID}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <div>Loading‚Ä¶</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          console.log(data.orders.edges[0].node);\r\n          console.log(data.orders.edges[0].node.lineItems.edges[0].node.image.originalSrc);\r\n\r\n\r\n\r\n\r\n          return (\r\n            DataTableExample()\r\n          );\r\n        }}\r\n        </Query>\r\n    );\r\n      }\r\n    }\r\n\r\n            /*<Card>\r\n              <p>Les 50 derni√®res commandes</p>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Order', plural: 'Orders' }}\r\n                items={data.orders.edges}\r\n                renderItem={item => {\r\n                  const orderName = item.node.name\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.node.lineItems.edges[0]\r\n                          ? item.node.lineItems.edges[0].node.image.originalSrc\r\n                          : ''\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.node.netPaymentSet.shopMoney.amount;\r\n                  return (\r\n                    \r\n                    <ResourceList.Item\r\n                    media = {orderName}\r\n                     // id={item.id}\r\n                      media={media}\r\n                      //accessibilityLabel={`View details for ${item.title}`}\r\n                      onClick={() => {\r\n                        //store.set('item', item);\r\n                        console.log('store.set')\r\n                        //redirectToProduct();\r\n                      }}\r\n                    >\r\n                      <Stack>\r\n                      <Stack.Item>\r\n                          <p>{orderName}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item fill>\r\n                          <h3>\r\n                            <TextStyle variation=\"strong\">\r\n\r\n                              {item.node.id}\r\n                            </TextStyle>\r\n                          </h3>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>${price}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>Expires on R </p>\r\n                        </Stack.Item>\r\n                      </Stack>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}*/\r\n\r\n export default ResourceListWithOrders;"]},"metadata":{},"sourceType":"module"}