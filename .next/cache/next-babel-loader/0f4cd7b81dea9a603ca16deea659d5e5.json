{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react'; //import { Redirect } from '@shopify/app-bridge/actions';\n//import { Context } from '@shopify/app-bridge-react';\n\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nconst UPDATE_PRICE = gql`\n  mutation productVariantUpdate($input: ProductVariantInput!) {\n    productVariantUpdate(input: $input) {\n      product {\n        title\n      }\n      productVariant {\n        id\n        price\n      }\n    }\n  }\n`;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: ''\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.2;\n      this.setState({\n        price,\n        variantId\n      });\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    /*const app = this.context;\r\n    const redirectToIndex = () => {\r\n      const redirect = Redirect.create(app);\r\n      redirect.dispatch(\r\n      Redirect.Action.APP,\r\n      '/index',\r\n    );}\r\n    */\n\n    return /*#__PURE__*/_jsx(Mutation, {\n      mutation: UPDATE_PRICE,\n      children: (handleSubmit, {\n        error,\n        data\n      }) => {\n        return /*#__PURE__*/_jsx(Page, {\n          children: /*#__PURE__*/_jsx(Layout, {\n            children: /*#__PURE__*/_jsxs(Layout.Section, {\n              children: [/*#__PURE__*/_jsx(DisplayText, {\n                size: \"large\",\n                children: name\n              }), /*#__PURE__*/_jsxs(Form, {\n                children: [/*#__PURE__*/_jsx(Card, {\n                  sectioned: true,\n                  children: /*#__PURE__*/_jsxs(FormLayout, {\n                    children: [/*#__PURE__*/_jsxs(FormLayout.Group, {\n                      children: [/*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: price,\n                        disabled: true,\n                        label: \"Original price\",\n                        type: \"price\"\n                      }), /*#__PURE__*/_jsx(TextField, {\n                        prefix: \"$\",\n                        value: discount,\n                        onChange: this.handleChange('discount'),\n                        label: \"Discounted price\",\n                        type: \"discount\"\n                      })]\n                    }), /*#__PURE__*/_jsx(\"p\", {\n                      children: \"This sale price will expire in two weeks\"\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(PageActions, {\n                  primaryAction: [{\n                    content: 'Save',\n                    onAction: () => {\n                      console.log('submitted');\n                      const productVariableInput = {\n                        id: variantId,\n                        price: discount\n                      };\n                      handleSubmit({\n                        variables: {\n                          input: productVariableInput\n                        }\n                      }); //redirectToIndex();\n                    }\n                  }],\n                  secondaryActions: [{\n                    content: 'Remove discount'\n                  }]\n                })]\n              })]\n            })\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","React","gql","Mutation","UPDATE_PRICE","EditProduct","Component","discount","price","variantId","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","componentDidMount","itemToBeConsumed","render","name","state","handleSubmit","error","data","handleChange","content","onAction","console","log","productVariableInput","variables","input"],"mappings":"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","sourcesContent":["import {\r\n    Banner,\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Frame,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField,\r\n    Toast,\r\n  } from '@shopify/polaris';\r\n  import store from 'store-js';\r\n  import React from 'react';\r\n  //import { Redirect } from '@shopify/app-bridge/actions';\r\n  //import { Context } from '@shopify/app-bridge-react';\r\n  import gql from 'graphql-tag';\r\n  import { Mutation } from 'react-apollo';\r\n\r\n  const UPDATE_PRICE = gql`\r\n  mutation productVariantUpdate($input: ProductVariantInput!) {\r\n    productVariantUpdate(input: $input) {\r\n      product {\r\n        title\r\n      }\r\n      productVariant {\r\n        id\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n  \r\n  class EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: ''\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n  \r\n    render() {\r\n      const { name, price, discount, variantId } = this.state;\r\n      /*const app = this.context;\r\n      const redirectToIndex = () => {\r\n        const redirect = Redirect.create(app);\r\n        redirect.dispatch(\r\n        Redirect.Action.APP,\r\n        '/index',\r\n      );}\r\n      */\r\n\r\n     return (\r\n        <Mutation\r\n          mutation={UPDATE_PRICE}\r\n        >\r\n          {(handleSubmit, {error, data}) => {\r\n  \r\n      return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <DisplayText size=\"large\">{name}</DisplayText>\r\n              <Form>\r\n                <Card sectioned>\r\n                  <FormLayout>\r\n                    <FormLayout.Group>\r\n                      <TextField\r\n                        prefix=\"$\"\r\n                        value={price}\r\n                        disabled={true}\r\n                        label=\"Original price\"\r\n                        type=\"price\"\r\n                      />\r\n                      <TextField\r\n                        prefix=\"$\"\r\n                        value={discount}\r\n                        onChange={this.handleChange('discount')}\r\n                        label=\"Discounted price\"\r\n                        type=\"discount\"\r\n                      />\r\n                    </FormLayout.Group>\r\n                    <p>\r\n                      This sale price will expire in two weeks\r\n                    </p>\r\n                  </FormLayout>\r\n                </Card>\r\n                <PageActions\r\n                  primaryAction={[\r\n                    {\r\n                      content: 'Save',\r\n                      onAction: () => {\r\n                        console.log('submitted');\r\n                        const productVariableInput = {\r\n                            id: variantId,\r\n                            price: discount,\r\n                          };\r\n                          handleSubmit({\r\n                            variables: { input: productVariableInput },\r\n                           });\r\n                        //redirectToIndex();\r\n                      }\r\n                    }\r\n                  ]}\r\n                  secondaryActions={[\r\n                    {\r\n                      content: 'Remove discount'\r\n                    }\r\n                  ]}\r\n                />\r\n              </Form>\r\n            </Layout.Section>\r\n          </Layout>\r\n        </Page>\r\n      );\r\n    }}\r\n    </Mutation>\r\n  );\r\n    }\r\n  \r\n    handleChange = (field) => {\r\n      return (value) => this.setState({ [field]: value });\r\n      \r\n    };\r\n  \r\n    itemToBeConsumed = () => {\r\n      const item = store.get('item');\r\n      const price = item.variants.edges[0].node.price;\r\n      const variantId = item.variants.edges[0].node.id;\r\n      const discounter = price * 0.2;\r\n      this.setState({ price, variantId });\r\n      return (price - discounter).toFixed(2);\r\n    };\r\n  }\r\n  \r\n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}