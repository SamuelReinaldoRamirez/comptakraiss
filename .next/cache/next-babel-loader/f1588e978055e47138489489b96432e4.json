{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\n\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\n\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\n\nconst GET_ORDERS_BY_ID = gql`\nquery {\n  orders(first: 50) {\n    edges {\n      cursor\n      node {\n        id\n        name\n        email\n        netPaymentSet{\n          shopMoney{\n            amount\n          }\t\n        }\n        lineItems(first:5){\n          edges{\n            node{\n              name\n              image {\n                id\n                    originalSrc\n                    altText\n              }\n               \n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nclass ResourceListWithOrders extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_ORDERS_BY_ID,\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading\\u2026\"\n        });\n        if (error) return /*#__PURE__*/_jsx(\"div\", {\n          children: error.message\n        });\n        console.log(data);\n        return /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            children: \"stuff here\"\n          }), /*#__PURE__*/_jsx(ResourceList, {\n            showHeader: true,\n            resourceName: {\n              singular: 'Product',\n              plural: 'Products'\n            },\n            items: data.edges.node,\n            renderItem: item => {\n              const media = /*#__PURE__*/_jsx(Thumbnail, {\n                source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n                alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n              });\n\n              const price = item.variants.edges[0].node.price;\n              return /*#__PURE__*/_jsx(ResourceList.Item, {\n                id: item.id,\n                media: media,\n                accessibilityLabel: `View details for ${item.title}`,\n                onClick: () => {\n                  //store.set('item', item);\n                  console.log('store.set'); //redirectToProduct();\n                },\n                children: /*#__PURE__*/_jsxs(Stack, {\n                  children: [/*#__PURE__*/_jsx(Stack.Item, {\n                    fill: true,\n                    children: /*#__PURE__*/_jsx(\"h3\", {\n                      children: /*#__PURE__*/_jsx(TextStyle, {\n                        variation: \"strong\",\n                        children: item.title\n                      })\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"$\", price]\n                    })\n                  }), /*#__PURE__*/_jsx(Stack.Item, {\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      children: [\"Expires on \", twoWeeksFromNow, \" \"]\n                    })\n                  })]\n                })\n              });\n            }\n          })]\n        });\n      }\n    });\n  }\n\n}\n\nexport default ResourceListWithOrders;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/getOrders.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","React","Redirect","Context","GET_ORDERS_BY_ID","ResourceListWithOrders","Component","render","data","loading","error","message","console","log","singular","plural","edges","node","item","media","images","originalSrc","altText","price","variants","id","title","twoWeeksFromNow"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport React from 'react';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\r\n\r\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nconst GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nclass ResourceListWithOrders extends React.Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_ORDERS_BY_ID}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <div>Loadingâ€¦</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          return (\r\n            <Card>\r\n              <p>stuff here</p>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                items={data.edges.node}\r\n                renderItem={item => {\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.originalSrc\r\n                          : ''\r\n                      }\r\n                      alt={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.altText\r\n                          : ''\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.variants.edges[0].node.price;\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={item.id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${item.title}`}\r\n                      onClick={() => {\r\n                        //store.set('item', item);\r\n                        console.log('store.set')\r\n                        //redirectToProduct();\r\n                      }}\r\n                    >\r\n                      <Stack>\r\n                        <Stack.Item fill>\r\n                          <h3>\r\n                            <TextStyle variation=\"strong\">\r\n                              {item.title}\r\n                            </TextStyle>\r\n                          </h3>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>${price}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>Expires on {twoWeeksFromNow} </p>\r\n                        </Stack.Item>\r\n                      </Stack>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\n export default ResourceListWithOrders;"]},"metadata":{},"sourceType":"module"}