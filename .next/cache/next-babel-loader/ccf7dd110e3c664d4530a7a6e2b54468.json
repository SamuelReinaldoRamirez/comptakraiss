{"ast":null,"code":"import _classCallCheck from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery {\\n  orders(first: 50) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        name\\n        email\\n        lineItems(first:5){\\n          edges{\\n            node{\\n              name\\n              image {\\n                id\\n                    originalSrc\\n                    altText\\n              }\\n               \\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, Page, DataTable, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\n\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\n\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\n\n/*const GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;*/\n\nvar GET_ORDERS_BY_ID = gql(_templateObject());\n\nfunction DataTableExample(data) {\n  var items = data.orders.edges;\n\n  function itemsToNode(_ref) {\n    var cursor = _ref.cursor,\n        node = _ref.node;\n    return {\n      node: node\n    }.node;\n  }\n\n  ;\n\n  function nodeToRows(node) {\n    console.log(\"node\");\n    console.log(node);\n    node.forEach(function (element, index) {\n      console.log(\"Current index: \".concat(index));\n      console.log(Object.values(element));\n      Object.values(element).forEach(function (element, index) {\n        console.log(typeof element === 'object' && element !== null);\n      });\n    });\n  }\n\n  var prerow = nodeToRows(items.map(itemsToNode)); //const rows = items.map(itemsToNode)\n\n  console.log('prerow');\n  console.log(prerow);\n  return /*#__PURE__*/_jsx(Page, {\n    title: \"Sales by product\",\n    children: /*#__PURE__*/_jsx(Card, {\n      children: /*#__PURE__*/_jsx(DataTable, {\n        columnContentTypes: ['numeric', 'text', 'text', 'text'],\n        headings: ['id', 'name', 'email', 'order'],\n        rows: rows //totals={['', '', '', 255, '$155,830.00']}\n\n      })\n    })\n  });\n}\n\n_c = DataTableExample;\n\nvar ResourceListWithOrders = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithOrders, _React$Component);\n\n  var _super = _createSuper(ResourceListWithOrders);\n\n  function ResourceListWithOrders() {\n    _classCallCheck(this, ResourceListWithOrders);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResourceListWithOrders, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(Query, {\n        query: GET_ORDERS_BY_ID,\n        children: function children(_ref2) {\n          var data = _ref2.data,\n              loading = _ref2.loading,\n              error = _ref2.error;\n          if (loading) return /*#__PURE__*/_jsx(\"div\", {\n            children: \"Loading\\u2026\"\n          });\n          if (error) return /*#__PURE__*/_jsx(\"div\", {\n            children: error.message\n          });\n          console.log(data);\n          console.log(data.orders.edges); //console.log(data.orders.edges[0].node.lineItems.edges[0].node.image.originalSrc);\n\n          return DataTableExample(data);\n        }\n      });\n    }\n  }]);\n\n  return ResourceListWithOrders;\n}(React.Component);\n/*<Card>\r\n  <p>Les 50 derni√®res commandes</p>\r\n  <ResourceList\r\n    showHeader\r\n    resourceName={{ singular: 'Order', plural: 'Orders' }}\r\n    items={data.orders.edges}\r\n    renderItem={item => {\r\n      const orderName = item.node.name\r\n      const media = (\r\n        <Thumbnail\r\n          source={\r\n            item.node.lineItems.edges[0]\r\n              ? item.node.lineItems.edges[0].node.image.originalSrc\r\n              : ''\r\n          }\r\n        />\r\n      );\r\n      const price = item.node.netPaymentSet.shopMoney.amount;\r\n      return (\r\n        \r\n        <ResourceList.Item\r\n        media = {orderName}\r\n         // id={item.id}\r\n          media={media}\r\n          //accessibilityLabel={`View details for ${item.title}`}\r\n          onClick={() => {\r\n            //store.set('item', item);\r\n            console.log('store.set')\r\n            //redirectToProduct();\r\n          }}\r\n        >\r\n          <Stack>\r\n          <Stack.Item>\r\n              <p>{orderName}</p>\r\n            </Stack.Item>\r\n            <Stack.Item fill>\r\n              <h3>\r\n                <TextStyle variation=\"strong\">\r\n                    {item.node.id}\r\n                </TextStyle>\r\n              </h3>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <p>${price}</p>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <p>Expires on R </p>\r\n            </Stack.Item>\r\n          </Stack>\r\n        </ResourceList.Item>\r\n      );\r\n    }}\r\n  />\r\n</Card>\r\n);\r\n}}\r\n</Query>\r\n);\r\n}\r\n}*/\n\n\nexport default ResourceListWithOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTableExample\");","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/getOrders.js"],"names":["gql","Query","Card","Page","DataTable","ResourceList","Stack","TextStyle","Thumbnail","store","React","Redirect","Context","GET_ORDERS_BY_ID","DataTableExample","data","items","orders","edges","itemsToNode","cursor","node","nodeToRows","console","log","forEach","element","index","Object","values","prerow","map","rows","ResourceListWithOrders","loading","error","message","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card,\r\n  Page,\r\n  DataTable,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport React from 'react';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\r\n\r\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*const GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;*/\r\n\r\nconst GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n\r\nfunction DataTableExample(data) {\r\n  const items = data.orders.edges;\r\n\r\n\r\n  function itemsToNode({cursor, node}) {\r\n    return {node}.node\r\n  };\r\n\r\n  function nodeToRows(node){\r\n    console.log(\"node\")\r\n    console.log(node)\r\n    node.forEach((element, index)=> {\r\n      console.log(`Current index: ${index}`);\r\n      console.log(Object.values(element))\r\n      Object.values(element).forEach((element, index)=> {\r\n        console.log(typeof element === 'object' && element !== null)\r\n      });\r\n    });\r\n  }\r\n\r\n  const prerow = nodeToRows(items.map(itemsToNode))\r\n  //const rows = items.map(itemsToNode)\r\n  console.log('prerow');\r\n  console.log(prerow);\r\n\r\n\r\n  return (\r\n    <Page title=\"Sales by product\">\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n            'numeric',\r\n            'text',\r\n            'text',\r\n            'text',\r\n          ]}\r\n          headings={[\r\n            'id',\r\n            'name',\r\n            'email',\r\n            'order',\r\n          ]}\r\n          rows={rows}\r\n          //totals={['', '', '', 255, '$155,830.00']}\r\n        />\r\n      </Card>\r\n    </Page>\r\n  );\r\n}\r\n\r\nclass ResourceListWithOrders extends React.Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_ORDERS_BY_ID}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <div>Loading‚Ä¶</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          console.log(data.orders.edges);\r\n          //console.log(data.orders.edges[0].node.lineItems.edges[0].node.image.originalSrc);\r\n\r\n\r\n\r\n\r\n          return (\r\n            DataTableExample(data)\r\n          );\r\n        }}\r\n        </Query>\r\n    );\r\n      }\r\n    }\r\n\r\n            /*<Card>\r\n              <p>Les 50 derni√®res commandes</p>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Order', plural: 'Orders' }}\r\n                items={data.orders.edges}\r\n                renderItem={item => {\r\n                  const orderName = item.node.name\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.node.lineItems.edges[0]\r\n                          ? item.node.lineItems.edges[0].node.image.originalSrc\r\n                          : ''\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.node.netPaymentSet.shopMoney.amount;\r\n                  return (\r\n                    \r\n                    <ResourceList.Item\r\n                    media = {orderName}\r\n                     // id={item.id}\r\n                      media={media}\r\n                      //accessibilityLabel={`View details for ${item.title}`}\r\n                      onClick={() => {\r\n                        //store.set('item', item);\r\n                        console.log('store.set')\r\n                        //redirectToProduct();\r\n                      }}\r\n                    >\r\n                      <Stack>\r\n                      <Stack.Item>\r\n                          <p>{orderName}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item fill>\r\n                          <h3>\r\n                            <TextStyle variation=\"strong\">\r\n\r\n                              {item.node.id}\r\n                            </TextStyle>\r\n                          </h3>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>${price}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>Expires on R </p>\r\n                        </Stack.Item>\r\n                      </Stack>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}*/\r\n\r\n export default ResourceListWithOrders;"]},"metadata":{},"sourceType":"module"}