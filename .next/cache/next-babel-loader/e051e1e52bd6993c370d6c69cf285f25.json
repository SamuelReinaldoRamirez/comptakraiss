{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport React from 'react';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\n\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\n\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\n\nconst GET_ORDERS_BY_ID = gql`\nquery {\n  orders(first: 50) {\n    edges {\n      cursor\n      node {\n        id\n        name\n        email\n        netPaymentSet{\n          shopMoney{\n            amount\n          }\t\n        }\n        lineItems(first:5){\n          edges{\n            node{\n              name\n              image {\n                id\n                    originalSrc\n                    altText\n              }\n               \n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nclass ResourceListWithOrders extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsx(Query, {\n      query: GET_ORDERS_BY_ID,\n      children: ({\n        data,\n        loading,\n        error\n      }) => {\n        if (loading) return /*#__PURE__*/_jsx(\"div\", {\n          children: \"Loading\\u2026\"\n        });\n        if (error) return /*#__PURE__*/_jsx(\"div\", {\n          children: error.message\n        });\n        console.log(data);\n        return /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"stuff here\"\n          })\n        });\n      }\n    });\n  }\n\n}\n\nexport default ResourceListWithOrders;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/getOrders.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","React","Redirect","Context","GET_ORDERS_BY_ID","ResourceListWithOrders","Component","render","data","loading","error","message","console","log"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,EACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,QAIsB,kBAJtB;AAKA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGX,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA9BA;;AAgCA,MAAMY,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AACnDC,EAAAA,MAAM,GAAG;AACP,wBACE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,gBAAd;AAAA,gBACG,CAAC;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,OAAD,KAA8B;AAC7B,YAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA,UAAP;AACb,YAAIC,KAAJ,EAAW,oBAAO;AAAA,oBAAMA,KAAK,CAACC;AAAZ,UAAP;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,4BACE,KAAC,IAAD;AAAA,iCACE;AAAA;AAAA;AADF,UADF;AAKD;AAVH,MADF;AAcD;;AAhBkD;;AAmBpD,eAAeH,sBAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail, } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport React from 'react';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\n/*mutation exampleProductCreate($input: ProductInput!) {\r\n  productCreate(input: $input) {\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n    product {\r\n      id\r\n      title\r\n      productType\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n/*{\r\n  \"input\": {\"title\": \"test product\", \"productType\": \"test type\"}\r\n}*/\r\n\r\n/*query {\r\n  orders(first: 3) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nconst GET_ORDERS_BY_ID = gql`\r\nquery {\r\n  orders(first: 50) {\r\n    edges {\r\n      cursor\r\n      node {\r\n        id\r\n        name\r\n        email\r\n        netPaymentSet{\r\n          shopMoney{\r\n            amount\r\n          }\t\r\n        }\r\n        lineItems(first:5){\r\n          edges{\r\n            node{\r\n              name\r\n              image {\r\n                id\r\n                    originalSrc\r\n                    altText\r\n              }\r\n               \r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nclass ResourceListWithOrders extends React.Component {\r\n  render() {\r\n    return (\r\n      <Query query={GET_ORDERS_BY_ID}>\r\n        {({ data, loading, error }) => {\r\n          if (loading) return <div>Loadingâ€¦</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          return (\r\n            <Card>\r\n              <p>stuff here</p>\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\n export default ResourceListWithOrders;"]},"metadata":{},"sourceType":"module"}