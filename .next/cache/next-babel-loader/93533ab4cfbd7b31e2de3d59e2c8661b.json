{"ast":null,"code":"import _classCallCheck from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { PureComponent, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store-js';\n/*const dotenv = require('dotenv');\r\nconst next = require('next');\r\ndotenv.config();\r\nconst dev = process.env.NODE_ENV !== 'production';\r\nconst app = next({ dev });\r\nconst { REACT_APP_NGROKBACK } = process.env;\r\nconst handle = app.getRequestHandler();\r\n\r\nconsole.log(process.env)\r\napp.prepare().then(() => {\r\n  console.log(\"in app prepare\")\r\n  console.log(REACT_APP_NGROKBACK)\r\n});*/\n//const {REACT_APP_ngrokBack} = process.env;\n//const ngrokBack = REACT_APP_ngrokBack;\n\nconsole.log('cAcAAAAAAAAAAAAAAAAAAAAA');\nconsole.log(KEY_NGROKBACK); //class Select extends PureComponent {\n\nvar Select = /*#__PURE__*/function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  var _super = _createSuper(Select);\n\n  function Select() {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      options: [{\n        name: 'Select…',\n        value: null\n      }, {\n        name: 'A',\n        value: 444\n      }, {\n        name: 'B',\n        value: 333\n      }, {\n        name: 'C',\n        value: 222\n      }],\n      value: '?'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      _this.setState({\n        value: event.target.value\n      }); // console.log(this.props.id)\n      //console.log(event.target.value)\n\n\n      store.set('etat' + _this.props.id, {\n        id: _this.props.id,\n        choix: event.target.value\n      });\n      console.log(\"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZz\");\n      console.log(event.target.value);\n      console.log(event.target.value == \"Select…\");\n      console.log(event.target.value === \"Select…\");\n      var orderState = event.target.value == \"Select…\" ? null : event.target.value;\n      console.log(orderState); //console.log(REACT_APP_ngrokBack)\n      //l'id qu'on envoie en params est l'id du select dans la page concernée. il faudra le faire correspondre au vrai ID en fonction de la pagination et du tri de la datatable\n\n      axios.put( //\"https://547f417cc329.ngrok.io/handle\", \n      \"https://\" + KEY_NGROKBACK + \".ngrok.io/handle\", {\n        \"order_state\": orderState\n      }, {\n        params: {\n          id: _this.props.id + 1\n        },\n        headers: {\n          \"Content-Type\": 'application/json'\n        }\n      }); //axios.put(\"https://\"+REACT_APP_ngrokBack+\".ngrok.io/handle\", {})\n      // \"proxy\": \"http://${REACT_APP_ngrokBack}.ngrok.io\",\n      //axios.put(\"localhost:5000/handle\", {})\n\n      /*.then(function(response){\r\n        console.log('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy')\r\n        console.log(response)\r\n      })*/\n\n      /* var sql = \"UPDATE orders SET order_state = 6 WHERE order_id=1\";\r\n        con.query(sql, function (err, result) {\r\n          if (err) throw err;\r\n          console.log(result.affectedRows + \" record(s) updated\");\r\n        });*/\n    });\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          options = _this$state.options,\n          value = _this$state.value;\n      var currentId;\n      var etatFromStore;\n      var val;\n      currentId = this.props.id, etatFromStore = store.get('etat' + currentId), val = value; //pour setter la ligne 1 (pas la 0) à undefined\n      //etatFromStore.id == 1 ? etatFromStore = undefined : '',\n\n      etatFromStore == undefined ? store.set('etat' + currentId, {\n        id: currentId,\n        choix: val\n      }) : val = etatFromStore.choix; //console.log('etat' + currentId),\n      //console.log(etatFromStore)\n      //console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id),\n      // console.log('this')\n      //console.log(this)\n      // <select onChange={this.handleChange} value={value}>\n\n      return /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(\"select\", {\n          onChange: this.handleChange,\n          value: val,\n          children: options.map(function (item) {\n            return (\n              /*#__PURE__*/\n\n              /*console.log('etat'+currentId),\r\n              console.log(etatFromStore),\r\n              console.log(etatFromStore == undefined),\r\n              console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id),\r\n              console.log(etatFromStore == undefined ? 'pas de choix choisi' : etatFromStore.choix),\r\n              */\n              //console.log(\"option\"),\n              //console.log(item),\n              //console.log({value}),\n\n              /*console.log(this),*/\n              _jsx(\"option\", {\n                value: item.value,\n                children: item.name\n              }, item.value)\n            );\n          })\n        }), /*#__PURE__*/_jsxs(\"h1\", {\n          children: [\"Favorite letter: \", value]\n        })]\n      });\n    }\n  }]);\n\n  return Select;\n}(React.Component);\n\nexport default Select;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/components/selectdrop.js"],"names":["axios","React","PureComponent","Fragment","ReactDOM","store","console","log","KEY_NGROKBACK","Select","options","name","value","event","setState","target","set","props","id","choix","orderState","put","params","headers","state","currentId","etatFromStore","val","get","undefined","handleChange","map","item","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AACAC,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,OAAO,CAACC,GAAR,CAAYC,aAAZ,E,CAEA;;IACMC,M;;;;;;;;;;;;;;;;4DACM;AACNC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO,EASP;AACED,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATO,EAaP;AACED,QAAAA,IAAI,EAAE,GADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbO,CADH;AAmBNA,MAAAA,KAAK,EAAE;AAnBD,K;;mEAyBO,UAACC,KAAD,EAAW;AACxB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEC,KAAK,CAACE,MAAN,CAAaH;AAAtB,OAAd,EADwB,CAEzB;AACC;;;AACAP,MAAAA,KAAK,CAACW,GAAN,CAAU,SAAO,MAAKC,KAAL,CAAWC,EAA5B,EAAgC;AAAEA,QAAAA,EAAE,EAAG,MAAKD,KAAL,CAAWC,EAAlB;AAAsBC,QAAAA,KAAK,EAAGN,KAAK,CAACE,MAAN,CAAaH;AAA3C,OAAhC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACE,MAAN,CAAaH,KAAzB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACE,MAAN,CAAaH,KAAb,IAAsB,SAAlC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACE,MAAN,CAAaH,KAAb,KAAuB,SAAnC;AAEA,UAAIQ,UAAU,GAAIP,KAAK,CAACE,MAAN,CAAaH,KAAb,IAAsB,SAAvB,GAAoC,IAApC,GAA2CC,KAAK,CAACE,MAAN,CAAaH,KAAzE;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYa,UAAZ,EAXwB,CAcxB;AAEA;;AACApB,MAAAA,KAAK,CAACqB,GAAN,EACE;AACA,mBAAWb,aAAX,GAAyB,kBAF3B,EAGE;AAAC,uBAAgBY;AAAjB,OAHF,EAIE;AAACE,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,EAAE,EAAC,MAAKD,KAAL,CAAWC,EAAX,GAAc;AAAnB,SAAT;AAAiCK,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAA1C,OAJF,EAjBwB,CAyBxB;AACD;AAGC;;AAEA;AACN;AACA;AACA;;AAGM;AACN;AACA;AACA;AACA;AACK,K;;;;;;;6BAEQ;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACCd,OADD,eACCA,OADD;AAAA,UACUE,KADV,eACUA,KADV;AAEP,UAAIa,SAAJ;AACA,UAAIC,aAAJ;AACA,UAAIC,GAAJ;AAEAF,MAAAA,SAAS,GAAG,KAAKR,KAAL,CAAWC,EAAvB,EACAQ,aAAa,GAAGrB,KAAK,CAACuB,GAAN,CAAU,SAAOH,SAAjB,CADhB,EAEAE,GAAG,GAAGf,KAFN,CANO,CAUP;AACA;;AAEAc,MAAAA,aAAa,IAAIG,SAAjB,GACAxB,KAAK,CAACW,GAAN,CAAU,SAAOS,SAAjB,EAA2B;AAAEP,QAAAA,EAAE,EAAGO,SAAP;AAAkBN,QAAAA,KAAK,EAAGQ;AAA1B,OAA3B,CADA,GAEAA,GAAG,GAACD,aAAa,CAACP,KAFlB,CAbO,CAgBP;AACA;AACA;AAID;AACC;AAID;;AAGC,0BACE,MAAC,QAAD;AAAA,gCACE;AAAQ,UAAA,QAAQ,EAAE,KAAKW,YAAvB;AAAqC,UAAA,KAAK,EAAEH,GAA5C;AAAA,oBACGjB,OAAO,CAACqB,GAAR,CAAY,UAAAC,IAAI;AAAA;AAAA;;AAKf;AACd;AACA;AACA;AACA;AACA;AACc;AACA;AACA;;AACA;AACA;AAAyB,gBAAA,KAAK,EAAEA,IAAI,CAACpB,KAArC;AAAA,0BACGoB,IAAI,CAACrB;AADR,iBAAaqB,IAAI,CAACpB,KAAlB;AAfe;AAAA,WAAhB;AADH,UADF,eAsBE;AAAA,0CAAsBA,KAAtB;AAAA,UAtBF;AAAA,QADF;AA0BD;;;;EA9HgBX,KAAK,CAACgC,S;;AAgIzB,eAAexB,MAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { PureComponent, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from 'store-js';\r\n\r\n/*const dotenv = require('dotenv');\r\nconst next = require('next');\r\ndotenv.config();\r\nconst dev = process.env.NODE_ENV !== 'production';\r\nconst app = next({ dev });\r\nconst { REACT_APP_NGROKBACK } = process.env;\r\nconst handle = app.getRequestHandler();\r\n\r\nconsole.log(process.env)\r\napp.prepare().then(() => {\r\n  console.log(\"in app prepare\")\r\n  console.log(REACT_APP_NGROKBACK)\r\n});*/\r\n\r\n\r\n//const {REACT_APP_ngrokBack} = process.env;\r\n//const ngrokBack = REACT_APP_ngrokBack;\r\nconsole.log('cAcAAAAAAAAAAAAAAAAAAAAA')\r\nconsole.log(KEY_NGROKBACK)\r\n\r\n//class Select extends PureComponent {\r\nclass Select extends React.Component{\r\n    state = {\r\n      options: [\r\n        {\r\n          name: 'Select…',\r\n          value: null,\r\n        },\r\n        {\r\n          name: 'A',\r\n          value: 444,\r\n        },\r\n        {\r\n          name: 'B',\r\n          value: 333,\r\n        },\r\n        {\r\n          name: 'C',\r\n          value: 222,\r\n        },\r\n      ],\r\n      value: '?',\r\n    };\r\n\r\n\r\n    \r\n  \r\n    handleChange = (event) => {\r\n      this.setState({ value: event.target.value });\r\n     // console.log(this.props.id)\r\n      //console.log(event.target.value)\r\n      store.set('etat'+this.props.id, { id : this.props.id, choix : event.target.value})\r\n      console.log(\"ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZz\")\r\n      console.log(event.target.value)\r\n      console.log(event.target.value == \"Select…\")\r\n      console.log(event.target.value === \"Select…\")\r\n\r\n      var orderState = (event.target.value == \"Select…\") ? null : event.target.value;\r\n      console.log(orderState)\r\n\r\n\r\n      //console.log(REACT_APP_ngrokBack)\r\n\r\n      //l'id qu'on envoie en params est l'id du select dans la page concernée. il faudra le faire correspondre au vrai ID en fonction de la pagination et du tri de la datatable\r\n      axios.put(\r\n        //\"https://547f417cc329.ngrok.io/handle\", \r\n        \"https://\"+KEY_NGROKBACK+\".ngrok.io/handle\", \r\n        {\"order_state\" : orderState}, \r\n        {params: { id:this.props.id+1 }, headers: {\"Content-Type\": 'application/json'}}\r\n    )\r\n\r\n\r\n      //axios.put(\"https://\"+REACT_APP_ngrokBack+\".ngrok.io/handle\", {})\r\n     // \"proxy\": \"http://${REACT_APP_ngrokBack}.ngrok.io\",\r\n\r\n\r\n      //axios.put(\"localhost:5000/handle\", {})\r\n\r\n      /*.then(function(response){\r\n        console.log('yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy')\r\n        console.log(response)\r\n      })*/\r\n\r\n\r\n      /* var sql = \"UPDATE orders SET order_state = 6 WHERE order_id=1\";\r\n        con.query(sql, function (err, result) {\r\n          if (err) throw err;\r\n          console.log(result.affectedRows + \" record(s) updated\");\r\n        });*/\r\n    };\r\n  \r\n    render() {\r\n      const { options, value } = this.state;\r\n      var currentId;\r\n      var etatFromStore;\r\n      var val;\r\n\r\n      currentId = this.props.id,\r\n      etatFromStore = store.get('etat'+currentId),\r\n      val = value;\r\n\r\n      //pour setter la ligne 1 (pas la 0) à undefined\r\n      //etatFromStore.id == 1 ? etatFromStore = undefined : '',\r\n\r\n      etatFromStore == undefined ? \r\n      store.set('etat'+currentId,{ id : currentId, choix : val}) : \r\n      val=etatFromStore.choix;\r\n      //console.log('etat' + currentId),\r\n      //console.log(etatFromStore)\r\n      //console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id),\r\n\r\n\r\n\r\n     // console.log('this')\r\n      //console.log(this)\r\n\r\n  \r\n\r\n     // <select onChange={this.handleChange} value={value}>\r\n\r\n\r\n      return (\r\n        <Fragment>\r\n          <select onChange={this.handleChange} value={val}>\r\n            {options.map(item => (\r\n\r\n              \r\n              \r\n \r\n              /*console.log('etat'+currentId),\r\n              console.log(etatFromStore),\r\n              console.log(etatFromStore == undefined),\r\n              console.log(etatFromStore == undefined ? 'pas d\\'id' : etatFromStore.id),\r\n              console.log(etatFromStore == undefined ? 'pas de choix choisi' : etatFromStore.choix),\r\n             */\r\n              //console.log(\"option\"),\r\n              //console.log(item),\r\n              //console.log({value}),\r\n              /*console.log(this),*/\r\n              <option key={item.value} value={item.value}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <h1>Favorite letter: {value}</h1>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n  export default Select;"]},"metadata":{},"sourceType":"module"}