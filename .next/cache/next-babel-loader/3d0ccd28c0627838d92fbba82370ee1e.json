{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/samue/Documents/compta-kraiss/nodee/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport React from 'react';\nimport ClientRouter from '../components/ClientRouter';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nvar client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");\n      var env = {\n        API_KEY: apiKey,\n        KEY_ngrokBack: ngrokBack\n      };\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          shopOrigin = _this$props.shopOrigin;\n      var config = {\n        ngrokBack: KEY_ngrokBack,\n        apiKey: API_KEY,\n        shopOrigin: shopOrigin,\n        forceRedirect: true\n      };\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsxs(Head, {\n          children: [/*#__PURE__*/_jsx(\"title\", {\n            children: \"Sample App\"\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            charSet: \"utf-8\"\n          })]\n        }), /*#__PURE__*/_jsxs(Provider, {\n          config: config,\n          children: [/*#__PURE__*/_jsx(ClientRouter, {}), /*#__PURE__*/_jsx(AppProvider, {\n            i18n: translations,\n            children: /*#__PURE__*/_jsx(ApolloProvider, {\n              client: client,\n              children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n/*const express = require('express')\r\nconst app = express()\r\nconst port = 5000\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('Hello World!')\r\n})\r\n\r\napp.listen(port, () => {\r\n  console.log(`Example app listening at http://localhost:${port}`)\r\n})\r\n\r\n*/\n\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var ctx;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = _ref.ctx;\n            return _context.abrupt(\"return\", {\n              shopOrigin: ctx.query.shop\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/samue/Documents/compta-kraiss/nodee/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","React","ClientRouter","ApolloClient","ApolloProvider","client","fetchOptions","credentials","MyApp","console","log","env","API_KEY","apiKey","KEY_ngrokBack","ngrokBack","props","Component","pageProps","shopOrigin","config","forceRedirect","getInitialProps","ctx","query","shop"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,IAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AADgB,CAAjB,CAAf;;IAMMC,K;;;;;;;;;;;;;6BACK;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AAEA,UAAMC,GAAG,GAAG;AAAEC,QAAAA,OAAO,EAAEC,MAAX;AACVC,QAAAA,aAAa,EAAEC;AADL,OAAZ;AAHS,wBAOsC,KAAKC,KAP3C;AAAA,UAOCC,SAPD,eAOCA,SAPD;AAAA,UAOYC,SAPZ,eAOYA,SAPZ;AAAA,UAOuBC,UAPvB,eAOuBA,UAPvB;AAQP,UAAMC,MAAM,GAAG;AAAEL,QAAAA,SAAS,EAAED,aAAb;AAA4BD,QAAAA,MAAM,EAAED,OAApC;AAA6CO,QAAAA,UAAU,EAAVA,UAA7C;AAAyDE,QAAAA,aAAa,EAAE;AAAxE,OAAf;AACC,0BACC,MAAC,KAAD,CAAO,QAAP;AAAA,gCACE,MAAC,IAAD;AAAA,kCACE;AAAA;AAAA,YADF,eAEE;AAAM,YAAA,OAAO,EAAC;AAAd,YAFF;AAAA,UADF,eAKE,MAAC,QAAD;AAAU,UAAA,MAAM,EAAED,MAAlB;AAAA,kCACA,KAAC,YAAD,KADA,eAEA,KAAC,WAAD;AAAa,YAAA,IAAI,EAAEpB,YAAnB;AAAA,mCACA,KAAC,cAAD;AAAgB,cAAA,MAAM,EAAEK,MAAxB;AAAA,qCACM,KAAC,SAAD,oBAAea,SAAf;AADN;AADA,YAFA;AAAA,UALF;AAAA,QADD;AAgBF;;;;EA1BiBtB,G;AA6BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAY,KAAK,CAACc,eAAN;AAAA,uEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,QAASA,GAAT;AAAA,6CACf;AACLJ,cAAAA,UAAU,EAAEI,GAAG,CAACC,KAAJ,CAAUC;AADjB,aADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAejB,KAAf","sourcesContent":["import App from 'next/app';\r\nimport Head from 'next/head';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport { Provider } from '@shopify/app-bridge-react';\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport React from 'react';\r\nimport ClientRouter from '../components/ClientRouter';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nconst client = new ApolloClient({\r\n  fetchOptions: {\r\n    credentials: 'include'\r\n  },\r\n});\r\n\r\nclass MyApp extends App {\r\n  render() {\r\n  console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\r\n\r\n  const env = { API_KEY: apiKey ,\r\n    KEY_ngrokBack: ngrokBack};\r\n\r\n\r\n    const { Component, pageProps, shopOrigin } = this.props;   \r\n    const config = { ngrokBack: KEY_ngrokBack, apiKey: API_KEY, shopOrigin, forceRedirect: true };\r\n     return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <title>Sample App</title>\r\n          <meta charSet=\"utf-8\" />\r\n        </Head>\r\n        <Provider config={config}>\r\n        <ClientRouter />\r\n        <AppProvider i18n={translations}>            \r\n        <ApolloProvider client={client}>\r\n              <Component {...pageProps} />\r\n            </ApolloProvider>\r\n        </AppProvider>\r\n        </Provider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n/*const express = require('express')\r\nconst app = express()\r\nconst port = 5000\r\n\r\napp.get('/', (req, res) => {\r\n  res.send('Hello World!')\r\n})\r\n\r\napp.listen(port, () => {\r\n  console.log(`Example app listening at http://localhost:${port}`)\r\n})\r\n\r\n*/\r\nMyApp.getInitialProps = async ({ ctx }) => {\r\n  return {\r\n    shopOrigin: ctx.query.shop,\r\n  }\r\n}\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}